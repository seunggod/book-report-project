<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Notice">

  
   
   <select id="noticeList"
   parameterType="hashmap"
   resultType="com.book.notice.vo.NoticeVo">
     SELECT notice_num, notice_title, nickname notice_writer, notice_cont, convert(CHAR(19), regdate, 20) regdate, readcount,  (select count(*) from like_notice where notice_num = notice.notice_num) likecount, (select count(*) from reply_notice where reply_notice.notice_num=notice.notice_num) replycount
     FROM notice JOIN member ON notice.notice_writer_num = member.mem_num
     <include refid="boardSearch"></include>
     ORDER BY ${sort}
     <if test="check == 'true'">
       desc
     </if>
     OFFSET (#{nowpage}-1)*#{dpp} ROWS
     FETCH NEXT #{dpp} ROWS ONLY
   </select>
  
   <select id="noticeCnt"
   parameterType="hashmap"
   resultType="int">
     SELECT COUNT(*)
     FROM notice JOIN member ON notice.notice_writer_num = member.mem_num
     <include refid="boardSearch"></include>
   </select>
 

   <insert id="noticeWrite"
   parameterType = "hashmap">
    INSERT INTO NOTICE(NOTICE_TITLE, NOTICE_WRITER_NUM, NOTICE_CONT, NOTICE_IMAGE)
    VALUES (#{title},#{mem_num},#{cont},#{notice_image})
   </insert>

   <select id="noticeView"
   statementType="CALLABLE"
   parameterType="hashmap"
   resultType="com.book.notice.vo.NoticeVo"
   >
   { CALL NOTICEVIEW(
   #{notice_num, mode=IN, jdbcType=INTEGER },
   #{check, mode=IN, jdbcType=INTEGER }
      )}
   </select>
  
   <insert id="likeNotice"
   statementType="CALLABLE"
   parameterType="hashmap"
   >
    { CALL NOTICELIKE(
   #{notice_num, mode=IN, jdbcType=INTEGER },
   #{mem_num, mode=IN, jdbcType=INTEGER },
   #{cnt, mode=OUT, jdbcType=INTEGER } )} 
   </insert>
   
   <select id="likeStatus"
   parameterType="hashmap"
   resultType="int">
    SELECT count(*) FROM like_notice
    WHERE notice_num = #{ notice_num }
    and like_mem_num = #{ mem_num }
   </select>
   
   <update id="updateNotice"
   parameterType="hashmap">
     UPDATE notice
     <set>
        <if test="notice_title!=null">
           notice_title = #{notice_title}
        </if>
        <if test="notice_image!=null">
           notice_image = #{notice_image}
        </if>
        notice_cont = #{cont}
     </set>
     WHERE notice_num = #{notice_num}
   </update>
   
   
   <delete id="deleteNotice"
   parameterType="hashmap">
    DELETE FROM notice
    WHERE notice_num in 
    <choose>
      <when test="notice_num_list!=null">
	    <foreach collection="notice_num_list" item="notice_num" open="(" close=")" separator=",">
	    	#{notice_num}
	    </foreach>
      </when>
      <otherwise>
            (#{notice_num})
      </otherwise>
    </choose>
    AND notice_writer_num = #{ mem_num }
   </delete>
  
   <delete id="likeCancel"
   parameterType="hashmap">
    DELETE FROM like_notice
    WHERE notice_num in (${notice_num})
    and like_mem_num = #{ mem_num }
   </delete>



   <sql id="boardSearch">
     <where>
       <if test="keyword != null">
          AND notice_title LIKE '%'+#{keyword}+'%'
          OR notice_cont     LIKE '%'+#{keyword}+'%'
       </if>
       <if test="writer != null">
         AND nickname = #{writer}
       </if>
       <if test="like != null">
         AND like_mem_num = #{like}
       </if>
     </where>
   </sql>
   
  
</mapper>